(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function s(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerpolicy&&(n.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?n.credentials="include":t.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(t){if(t.ep)return;t.ep=!0;const n=s(t);fetch(t.href,n)}})();const i="this-is-a-message";function c(r){if(!(typeof r=="object"&&r!==null&&"type"in r&&"value"in r&&r.signature===i))throw new TypeError(`data is not an ExampleMessage (got ${r})`);const e=r.type;switch(e){case"Layer":case"MainImageData":case"ParseData":return;default:(s=>{throw new TypeError(`Unexpected ExampleMessage type: ${s}`)})(e)}}function l(r,e){return{type:r,value:e,signature:i,timestamp:Date.now()}}const d=r=>{const e=document.createElement("canvas"),s=e.getContext("2d"),{width:o,height:t,pixelData:n}=r,a=s.createImageData(o,t);return e.width=o,e.height=t,a.data.set(n),s.putImageData(a,0,0),e},u=r=>{if(r.arrayBuffer)return r.arrayBuffer();{const e=new FileReader;return e.readAsArrayBuffer(r),new Promise(s=>{e.addEventListener("load",o=>{if(o.target)s(o.target.result);else throw new Error("Loaded file but event.target is null")})})}},f=({data:r},e)=>{const{type:s,timestamp:o,value:t}=r;if(c(r),console.log("It took %d ms to send this message (worker \u2192 main, type: %o)",Date.now()-o,s),s==="Layer"){const n=t;e.insertAdjacentHTML("beforeend",`<h3>${n.name}</h3>`),e.insertAdjacentHTML("beforeend",`<div><p class="layer-info">size : ${n.width} x ${n.height} | top: ${n.top} | left: ${n.left}</p></div>`),console.time("Create and append <canvas> for layer"),e.appendChild(d(n)),console.timeEnd("Create and append <canvas> for layer")}};document.addEventListener("DOMContentLoaded",()=>{console.log("Script loaded");const r=document.querySelector("#results"),e=document.querySelector('input[type="file"]'),s=new Worker(""+new URL("worker.166d2034.js",import.meta.url).href,{type:"module"});s.addEventListener("message",o=>f(o,r)),e.addEventListener("change",()=>{const o=e.files[0];!o||(u(o).then(t=>{s.postMessage(l("ParseData",t),[t])}),e.value="",r.innerHTML="")})});
